name: Fetch and Save Proxies

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  fetch-proxies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Fetch and Save Proxies
        run: |
          set -e
          SOURCES=(
            "https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&proxy_format=protocolipport&format=text"
            "https://proxylist.geonode.com/api/proxy-list?filterUpTime=90&limit=500&page=1&sort_by=lastChecked&sort_type=desc"
            "https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&proxy_format=protocolipport&format=json"
            "https://www.911proxy.com/detection/proxyList?limit=500&page=1&sort_by=lastChecked&sort_type=desc&filterUpTime=90"
            "https://api.lumiproxy.com/web_v1/free-proxy/list?page_size=500&page=1&uptime=90&language=en-us"
            "http://43.135.31.113:8777/proxyList?limit=500&page=1&uptime=90&language=en-us"
          )
          > proxies.txt

          for URL in "${SOURCES[@]}"; do
            echo "Fetching: $URL"
            RESPONSE=$(curl -s "$URL" || echo "ERROR")
            if [[ "$RESPONSE" == "ERROR" ]]; then
              echo "Skipping $URL due to error."
              continue
            fi
            
            if [[ "$URL" == *"format=text"* ]]; then
              echo "$RESPONSE" >> proxies.txt
            elif [[ "$URL" == *"lumiproxy"* ]]; then
              echo "$RESPONSE" | jq -r '.data.list[] | select(.ip and .port and .protocol) | (.protocol) as $proto | "\($proto | if . == 8 then \"socks5\" elif . == 4 then \"socks4\" elif . == 2 then \"https\" elif . == 1 then \"http\" else \"unknown\" end)://\(.ip):\(.port)"' >> proxies.txt 2>/dev/null || true
            else
              echo "$RESPONSE" | jq -r '.data[] | select(.protocols) | .protocols[] as $proto | "\($proto)://\(.ip):\(.port)"' >> proxies.txt 2>/dev/null || true
            fi
          done

          sort -u proxies.txt -o proxies.txt
          grep '^http://' proxies.txt > http.txt || true
          grep '^https://' proxies.txt > https.txt || true
          grep '^socks4://' proxies.txt > socks4.txt || true
          grep '^socks5://' proxies.txt > socks5.txt || true
          cp proxies.txt all.txt

      - name: Commit and Push with Random Emoji
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "trio666"
          git config --global user.email "github@triooo.co"
          EMOJIS=("🚀" "🔥" "🌟" "💡" "🔧" "✅" "📌" "📈" "🕵️" "💾")
          RANDOM_EMOJI=${EMOJIS[$RANDOM % ${#EMOJIS[@]}]}
          TIMESTAMP=$(TZ=Asia/Jakarta date '+%H:%M %d/%m/%Y')
          git add http.txt https.txt socks4.txt socks5.txt all.txt
          git commit -m "Update proxy lists - $TIMESTAMP $RANDOM_EMOJI" || echo "No changes to commit"
          git push "https://x-access-token:${GH_PAT}@github.com/trio666/proxy-checker.git"
